PREFIX xyz: <http://sparql.xyz/facade-x/data/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX fx: <http://sparql.xyz/facade-x/ns/>
PREFIX hohimer: <http://hohimer.net/ns/>
PREFIX stix: <http://docs.oasis-open.org/cti/ns/stix#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

CONSTRUCT {


	?object_iri a ?stixType ;
	stix:alias ?alias;
	stix:id ?id;
	stix:type ?type;
	stix:spec_version ?spec_version;
	stix:created ?dt_created;
	stix:modified ?dt_modified;
	stix:name ?name;
	stix:description ?description;
	stix:first_seen ?dt_first_seen;
	stix:resource_level ?resource_level;
	stix:primary_motivation ?primary_motivation;
	stix:roles ?role_list;
	stix:identity_class ?identity_class;
	stix:sectors ?sector_list;
#	stix:contact_information ?contact_information_string;
	stix:pattern_type ?pattern_type;
	stix:pattern ?pattern;
	stix:indicator_types ?indicator_list;
	stix:valid_from ?dt_valid_from;
	stix:kill_chain_phases ?chains;
	stix:tool_types ?tool_types_list;
	stix:relationship_type ?relationship_type;
	stix:source_ref ?source_ref_iri;
	stix:target_ref ?target_ref_iri;
	.


	?object_iri stix:external_reference ?exref_iri .
	?exref_iri stix:source_name ?ex_ref_source_name .
	?exref_iri stix:url ?ex_ref_url .
	?exref_iri stix:description ?ex_ref_description .
	?exref_iri stix:external-id ?ex_ref_external_id .
	

		

}
WHERE {
	SERVICE <x-sparql-anything:blank-nodes=false> {
		fx:properties fx:location "./apt1.json" .


	# root array of objects
			?root xyz:objects ?objects .
	
	# individual objects from the objects array
			?objects ?object_slot ?object .
	
	# the type and id of the object 
			?object xyz:type ?type .
			?object xyz:id ?id .


	### OPTIONAL ###
	# aliases
			OPTIONAL {
				?object xyz:aliases ?aliases . 
				?aliases fx:anySlot ?alias .
			}

	# contact_information
			OPTIONAL {?object xyz:contact_information ?contact_information .}
			BIND(xsd:string(?contact_information) AS ?contact_information_string )

	# created
			OPTIONAL {?object xyz:created ?created . }

	# description
			OPTIONAL {?object xyz:description ?description . }

	# external_references
			OPTIONAL {
				?object xyz:external_references ?external_references . 
				?external_references fx:anySlot ?external_reference .
				?external_reference xyz:source_name ?ex_ref_source_name .
				OPTIONAL { ?external_reference xyz:description ?ex_ref_description . }
				OPTIONAL { ?external_reference xyz:external_id ?ex_ref_external_id . }
				OPTIONAL { ?external_reference xyz:url ?ex_ref_url . }
				BIND (IRI(CONCAT("http://docs.oasis-open.org/cti/ns/stix#ExternalReference-", STRUUID() )) AS ?exref_iri ) .				
			}

	# first_seen
			OPTIONAL {?object xyz:first_seen ?first_seen . }

	# identity_class
			OPTIONAL {?object xyz:identity_class ?identity_class .}

	# indicator_types
			OPTIONAL {?object xyz:indicator_types ?indicator_types . 
						?indicator_types ?indicator_slot ?indicator_list .	}

	# kill_chain_phases
			OPTIONAL {?object xyz:kill_chain_phases ?kill_chain_phases . 
						?kill_chain_phases ?kill_slot ?chain_list .
						?chain_list ?chain_slot ?chains .
					}

	# modified
			OPTIONAL {?object xyz:modified ?modified . }

	# name
			OPTIONAL {?object xyz:name ?name . }

	# pattern
			OPTIONAL {?object xyz:pattern ?pattern . }

	# pattern_type
			OPTIONAL {?object xyz:pattern_type ?pattern_type . }

	# primary_motivation
			OPTIONAL {?object xyz:primary_motivation ?primary_motivation . }

	# relationship_type
			OPTIONAL {?object xyz:relationship_type ?relationship_type . }

	# resource_level
			OPTIONAL {?object xyz:resource_level ?resource_level . }

	# roles
			OPTIONAL {?object xyz:roles ?roles . 
						?roles ?roles_slot ?role_list .	}

	# sectors
			OPTIONAL {?object xyz:sectors ?sectors . 
				?sectors ?sectors_slot ?sector_list .	}

	# source_ref
			OPTIONAL {?object xyz:source_ref ?source_ref . }

	# spec_version
			OPTIONAL {?object xyz:spec_version ?spec_version . }

	# target_ref
			OPTIONAL {?object xyz:target_ref ?target_ref . }
		
	# tool_types
			OPTIONAL {?object xyz:tool_types ?tool_types . 
						?tool_types ?tool_types_slot ?tool_types_list .	}

	# valid_from
			OPTIONAL {?object xyz:valid_from ?valid_from . }

			}

		
	# Reformat dates to allow ingestion into xsd:dateTime
	BIND(xsd:dateTime(?created) AS ?dt_created )
	BIND(xsd:dateTime(?modified) AS ?dt_modified )
	BIND(xsd:dateTime(?first_seen) AS ?dt_first_seen )
	BIND(xsd:dateTime(?valid_from) AS ?dt_valid_from )
	

	# Form the IRI for the stixBundle
	BIND(IRI(CONCAT("http://hohimer.net/ns/", ?id)) AS ?object_iri )
	BIND(IRI(CONCAT("http://hohimer.net/ns/", ?source_ref)) AS ?source_ref_iri )
	BIND(IRI(CONCAT("http://hohimer.net/ns/", ?target_ref)) AS ?target_ref_iri )
	
	BIND( IF(?relationship_type = "uses", stix:uses, ?nothing ) AS ?relation_iri )
	
	# Form the stix type of either stix:Bundle or stix:StixObject
	BIND ((IF(?type = "bundle", IRI("http://docs.oasis-open.org/cti/ns/stix#Bundle"),  IRI("http://docs.oasis-open.org/cti/ns/stix#StixObject"))) AS ?stixType )
}
